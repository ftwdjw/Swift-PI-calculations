

//: This playground shows how the Leibniz equation can be used to calculate pi. The more interations the more accurate the answer. An accurate value of pi can easily be generated by calculating 4 times the arctangent of 1.


import UIKit


//: calculation for PI

//: ![Calculation for pi](pi4.png)
//:uses Leibniz equation

//: ![Calculation for pi](pi52.tiff)
//:With 1000 interations the Leibniz value of pi is within 0.0317991814950801 %
//:With 10000 interations the Leibniz value of pi is within 0.00318278057555302 %
//: With 100000 interations the Leibniz value of pi is within 0.00031830670076848 %

var pi:Double = 0.0
var sign:Double = 0.0
var denominator:Double = 0.0
var maxInterations = 1000

//change the value of maxInterations to lower the calculated error of the Leibniz equation

for n in (0...maxInterations){
    
    sign=pow(-1.0,Double(n))
    
    denominator=Double(2*n+1)
    
    pi=pi+sign/denominator
    
}

print("Leibniz infinite series pi/4=\(pi)")
print("Leibniz infinite series pi=\(4.0*pi) with \(maxInterations) interations")

//arctangent of 1 is pi/4
let piAccurate = 4.0*atan(1)

print("Accurate value of  pi=\(piAccurate)")

let perCentError=(4.0*pi-piAccurate)*100.0/piAccurate

print("With \(maxInterations) interations the Leibniz value of pi is within \(perCentError) %")
